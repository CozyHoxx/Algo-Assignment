the method used is inside dataextract.py, get_route_from_file()

What it does is that we take each station from those file, and add each of them as a node for our graph (weighted directed)

Each node has the details:
Coordinates, Stop name, and which route it belongs to
Each node is connected with an edge, which also holds these extra data:
Which route it belongs to, type of transportation (Bus, Train, whatever), distance

Each time we add a new node, it will also call the generate_walking_route method, which basically iterate through the other existing nodes to connect them by foot, or else dijstkra wont be able to find the path

Conditions to connect:
1)  Within 0.5km
2)  Must not be the same route. (No point connecting them)
3) No edge exist between the two nodes.

If all is good, we connect them, and the type is Transport.WALK

Once the graph is generated, the graph is accessed by map_creator.py, and it uses the nodes and edges to draw out the map.

Keep in mind that the get_route_from_file() generates the base graph to be used internally to find routes.

generate_path(start_pos, end_pos) is the one in charge of finding the route

We first check the start_pos and end_pos to see if they exist as nodes,

if not add them to the graph and connect them to other neighbouring nodes by foot (same logic as generate_walking_route)

then after that the method nx.algorithms.dijkstra_path(G, start_pos, end_pos, weight='weight'). This is part of networkx library function, so i just use that.
(ignore the floyd_warshall, that one is just for testing, not to be used)

After the shortest path is generated, it is then sent back to the map_creator's generate_route method (i need to change the name to avoid confusion.....) and draw the route from start to end.

And that's the basic gist of it.

Edits:
10/6/2020
initial explaination
-Cheng Wai Jun
================================================================================================
This is where we get our data points
http://www.data.gov.my/data/en_US/dataset?q=&groups=pengangkutan&sort=metadata_modified+desc
